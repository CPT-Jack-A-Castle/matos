# Project: Matos by CloudMatos (https://www.cloudmatos.com/) - Automate your Cloud Security & Compliance
# Asset: aws-eks
# Licensing: MIT
- name: Restrict Access to the Control Plane Endpoint
  hosts: localhost
  gather_facts: false
  become: true
  pre_tasks:
    - name: Validate Input
      assert:
        that:
          - aws_access_key is defined
          - aws_secret_key is defined
          - aws_region is defined
          - cluster_name is defined
          - public_access_cidrs is defined
  tasks:
    - name: Get EKS cluster info
      shell: |
        export AWS_ACCESS_KEY_ID={{ aws_access_key }}
        export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}
        export AWS_DEFAULT_REGION={{ aws_region }}
        aws eks --region {{ aws_region }} describe-cluster --name {{ cluster_name }} | jq -r '.cluster.resourcesVpcConfig.endpointPrivateAccess'
      register: cluster_info_output

    - name: EKS cluster info output
      debug:
        msg: "{{ cluster_info_output }}"

    - name: Check endpointPrivateAccess
      shell: |
        echo "endpointPrivateAccess is true !!!"
        echo "Stop running playbook !!!"
      when: cluster_info_output.stdout == "true"
      register: check_endpoint_output

    - debug:
        msg: "{{ check_endpoint_output }}"

    - name: Restrict Access to the Control Plane Endpoint
      block:
        - name: Update Private Endpoint and Public CIDRs
          shell: >
            aws eks --region {{ aws_region }} update-cluster-config --name {{ cluster_name }} --resources-vpc-config
            endpointPrivateAccess=true,publicAccessCidrs={{ public_access_cidrs }}
          register: update_config_output
          environment:
            AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
            AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
            AWS_DEFAULT_REGION: "{{ aws_region }}"

        - name: Print configuration output
          debug:
            msg: "{{ update_config_output }}"
      when: cluster_info_output.stdout == "false"

    - name: Make sure to remove exported values
      shell: |
        unset AWS_ACCESS_KEY_ID
        unset AWS_SECRET_ACCESS_KEY
        unset AWS_DEFAULT_REGION
